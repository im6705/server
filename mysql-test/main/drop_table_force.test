--source include/have_log_bin.inc
--source include/have_innodb.inc

CALL mtr.add_suppression("Operating system error number");
CALL mtr.add_suppression("The error means the system cannot");
CALL mtr.add_suppression("returned OS error 71");

let $DATADIR= `select @@datadir`;

--echo #Test1: table with missing .ibd can be dropped directly, no need to drop force
# drop table without ibd
create table t1(a int)engine=innodb;
--remove_file $DATADIR/test/t1.ibd
drop table t1;
--list_files  $DATADIR/test/

--echo #Test2: non super user has no privilege to drop force
# create table t1 and rm frm
create table t1(a int) engine=innodb;
--remove_file $DATADIR/test/t1.frm

# create test user
create user test identified by '123456';
grant all privileges on test.t1 to 'test'@'%'identified by '123456' with grant option;

# connect as test
connect (con_test, localhost, test,'123456', );
--connection con_test

# drop table with user test
drop table t1;
--error ER_BAD_TABLE_ERROR
drop table t1;

# connect as root
--connection default

--disconnect con_test
drop user test;

# check files in datadir about t1
--list_files  $DATADIR/test/

--echo #Test4: drop table force can drop consistent table as well
create table t1(a int) engine=innodb;
drop table t1;

# check files in datadir about t1
--list_files  $DATADIR/test/

--echo #Test5: drop table with triger, and with missing frm
# create table t1 with triger and rm frm
create table t1(a int)engine=innodb;
create trigger t1_trg before insert on t1 for each row begin end;

let $DATADIR= `select @@datadir`;
--remove_file $DATADIR/test/t1.frm

drop table t1;
--error ER_BAD_TABLE_ERROR
drop table t1;

# check files in datadir about t1
--list_files  $DATADIR/test/

--echo #Test6: table with foreign key references can not be dropped
# create table with foreign key reference and rm frm
CREATE TABLE parent (id INT NOT NULL, PRIMARY KEY (id)) ENGINE=INNODB;
CREATE TABLE child (id INT, parent_id INT, INDEX par_ind (parent_id), FOREIGN KEY (parent_id) REFERENCES parent(id) ON DELETE CASCADE) ENGINE=INNODB;
--remove_file $DATADIR/test/parent.frm

# parent can not be dropped when there are foreign key references
--error ER_ROW_IS_REFERENCED_2
drop table parent;

# parent can be dropped when there are no foreign key references
drop table child;
drop table parent;

# check files in datadir about child and parent
--list_files  $DATADIR/test/

--echo #Test7: drop table force twice
create table t1(a int)engine=innodb;
--remove_file $DATADIR/test/t1.frm

# firt drop froce will success
drop table t1;

# check files in datadir about t1
--list_files  $DATADIR/test/

# second drop with if exists will also ok
drop table if exists t1;

# check files in datadir about t1
--list_files  $DATADIR/test/

--echo #Test8: check compatibility with if exists
create table t1(a int)engine=innodb;
--remove_file $DATADIR/test/t1.frm

# first drop force will success
drop table t1;

# check files in datadir about t1
--list_files  $DATADIR/test/

# second drop with if exists will success
drop table if exists t1;

--echo #Test9: check compatibility with restrict/cascade
# create table with foreign key reference and rm frm
CREATE TABLE parent (id INT NOT NULL, PRIMARY KEY (id)) ENGINE=INNODB;
CREATE TABLE child (id INT, parent_id INT, INDEX par_ind (parent_id), FOREIGN KEY (parent_id) REFERENCES parent(id) ON DELETE CASCADE) ENGINE=INNODB;

# parent can not be dropped when there are froeign key references
--error ER_ROW_IS_REFERENCED_2
drop table parent;
--error ER_ROW_IS_REFERENCED_2
drop table parent restrict;
--error ER_ROW_IS_REFERENCED_2
drop table parent cascade;
--error ER_ROW_IS_REFERENCED_2
drop table parent;
--error ER_ROW_IS_REFERENCED_2
drop table parent restrict;
--error ER_ROW_IS_REFERENCED_2
drop table parent cascade;

# parent can be dropped when there are no foreign key references
drop table child;
drop table parent;

--echo #Test10: force drop non-innodb engine table returns ok
# create myisam table t1 and rm .frm
create table t1(a int) engine=myisam;
--remove_file $DATADIR/test/t1.frm
--replace_result \\ /
drop table t1;

# create myisam table t1 and rm .MYD
create table t1(a int) engine=myisam;
--remove_file $DATADIR/test/t1.MYD
--replace_result \\ /
drop table t1;

# create myisam table t1 and rm .MYI
create table t1(a int) engine=myisam;
--remove_file $DATADIR/test/t1.MYI
--replace_result \\ /
drop table t1;
--list_files  $DATADIR/test/

# create Aria table t1 and rm .frm and .MAD
create table t1(a int) engine=aria;
--remove_file $DATADIR/test/t1.frm
--remove_file $DATADIR/test/t1.MAD
--list_files  $DATADIR/test/
--error ER_BAD_TABLE_ERROR
drop table t1;
--replace_result \\ /
show warnings;
--list_files  $DATADIR/test/

# create Aria table t2 and rm .frm and .MAI
create table t2(a int) engine=aria;
flush tables;
--remove_file $DATADIR/test/t2.frm
--remove_file $DATADIR/test/t2.MAI
--list_files  $DATADIR/test/
--error ER_BAD_TABLE_ERROR
drop table t2;
--replace_result \\ /
show warnings;
--list_files  $DATADIR/test/
